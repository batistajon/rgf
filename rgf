#!/usr/bin/env bash

# Collect Ripgrep arguments (if any)
rg_args=()
for arg in "$@"; do
    case "$arg" in
        -*)
            rg_args+=("$arg")  # Collect rg options (-g, --hidden, etc.)
            ;;
        *)
            echo "Error: Invalid argument '$arg'. Only rg options are allowed."
            exit 1
            ;;
    esac
done

# If no search term is provided, prompt via fzf
# if [[ -z "$*" ]]; then
#     search_term=$(rg --files | fzf --prompt="Search for: ")
#     if [[ -z "$search_term" ]]; then
#         echo "No search term entered. Exiting."
#         exit 1
#     fi
# else
#     search_term="${rg_args[@]}"
# fi

# Loop to allow continuing search if the user exits Vim
while true; do
    selected=$(rg --color=always --line-number --no-heading --smart-case ${rg_args[@]} "$search_term" |
        fzf --ansi \
            --color "hl:-1:underline,hl+:-1:underline:reverse" \
            --delimiter : \
            --preview 'bat --color=always {1} --highlight-line {2}' \
            --preview-window 'up,60%,border-bottom,+{2}+3/3,~3')

    # If no file was selected, exit
    if [[ -z "$selected" ]]; then
        echo "No file selected. Exiting."
        exit 0
    fi

    # Extract filename and line number
    file=$(echo "$selected" | cut -d ':' -f 1)
    line=$(echo "$selected" | cut -d ':' -f 2)

    # Open the file in Vim at the specified line
    nvim "$file" +"$line"

    # Ask if the user wants to continue searching
    read -p "Continue searching? (y/n): " choice
    if [[ "$choice" != "y" ]]; then
        exit 0
    fi
done

